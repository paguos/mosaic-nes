buildscript {
    repositories {
        jcenter()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
        classpath 'net.researchgate:gradle-release:2.6.0'
    }
}

apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'net.researchgate.release'
apply plugin: 'maven'


shadowJar {
    mergeServiceFiles()
}
group 'stream.nebula'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile 'org.apache.httpcomponents:httpclient:4.5'
    compile group: 'org.json', name: 'json', version: '20190722'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation group: 'org.jgrapht', name: 'jgrapht-core', version: '1.4.0'
    implementation group: 'org.jgrapht', name: 'jgrapht-io', version: '1.4.0'
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/nebulastream/nebulastream-java-client")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("PASSWORD")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}

afterReleaseBuild.dependsOn(uploadArchives)

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: System.getenv("ossrhUsername"), password: System.getenv("ossrhPassword"))
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: System.getenv("ossrhUsername"), password: System.getenv("ossrhPassword"))
            }

            pom.project {
                name 'Nebula Stream Java Client'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'A client application for building and submitting jobs to Nebula Stream'
                url 'http://nebula.stream'

                scm {
                    connection 'scm:https://github.com/nebulastream/nebulastream-java-client.git'
                    developerConnection 'scm:git:https://github.com/nebulastream/nebulastream-java-client.git'
                    url 'https://github.com/nebulastream/nebulastream-java-client'
                }
                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'nebulastream'
                        name 'Nebula Stream Developers'
                        email 'nebulastream@dima.tu-berlin.de'
                    }
                }
            }
        }
    }
}